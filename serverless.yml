

service: bd-ipa-api
provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, 'dev'}
  environment:
    BAR_DATA_BUCKET:
      'Fn::ImportValue': ${self:service}:${self:provider.stage}:BarDataBucketArn
    
  iamRoleStatements:
    - Effect: "Allow"
      Action: 
        - "s3:ListBucket"
      Resource: 
        'Fn::ImportValue': ${self:service}:${self:provider.stage}:BarDataBucketArn

    - Effect: Allow
      Action:
        - "s3:GetObject"
        - "s3:PutObject"
        - "s3:DeleteObject"
      Resource:
        Fn::Join:
           - ""
           - - "arn:aws:s3:::"
             - Ref: barDataBucket
             - "/*"

functions:
  bars:
    handler: handler.getAllBars
    events:
      - http:
          path: bars
          method: get

  barDetails:
    handler: handler.getBarDetails
    events:
      - http:
          path: bars/{bar}
          method: get
          request:
            parameters:
              paths:
                bar: true

  beersInBar:
    handler: handler.getBeersInBar
    events:
      - http:
          path: ontap/{bar}
          method: get
          request:
            parameters:
              paths:
                bar: true
  
  refreshBarsList:
    handler: handler.refreshBarsList
    events:
      - http:
          path: util/refreshBarsList
          method: get

  refreshFullBarsList: 
    handler: handler.refreshFullBarsList
    timeout: 60 # This is a longer process that requires a higher timeout limit
    events:
      - http:
          path: util/refreshFullBarsList
          method: get
  
plugins:
  - serverless-domain-manager
  - serverless-plugin-typescript
  - serverless-s3-local
  - serverless-offline

package:
  include:
    - handler.js
    - static/

custom:
  customDomain:
    domainName: ${opt:apiprefix, 'api-dev'}.ipa-api.net
    basePath: 'brewdog'
    stage: ${self:provider.stage}
    createRoute53Record: true

resources:
  Resources:
    barDataBucket:
      Type: AWS::S3::Bucket

  # Mah outputs!
  Outputs:
    BarDataBucketArn:
      Description: Arn for the Bar data bucket
      Value:
        "Fn::GetAtt": [ barDataBucket, Arn ]
      Export:
        Name: ${self:service}:${self:provider.stage}:BarDataBucketArn

    BarDataBucketName:
      Description: Name of the Bar data bucket
      Value: 
        "Ref": "barDataBucket"
      Export: 
        Name: ${self:service}:${self:provider.stage}:BarDataBucketName

      